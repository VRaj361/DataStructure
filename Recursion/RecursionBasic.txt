**** Recursion
-> If we talked about recursion and function then the function is group of instructions
-> in Recurstion we use the function but function call it self it called Recurstion
-> Recursion must need base condition then the program will terminated
-> If we don't give condition then the program will runs until and unless the memory is not been 
   filled completely this condition is called Stack-overflow condition 
-> there are traising tree to understand recursion
-> recursion is work as ascending and descending order first call and after return or first go base condition after return the
   values or operations

-> Basic Difference between loop and recursion is Loop is going in ascending phase and recursion is going in descending phase
-> time taken by execution is O(n) because of all the calls 1 so n steps takes n time complexity in order to understand tree of calls in
   recurstion
-> use Static variable for one time memory allocation in recursion and daily time also

-> type of recursion
1) tail recursion->print first and function at last 
   -> if you write the tail recursion if possible that convert the recursion into loop because of space complexity of recursion is O(n) and loop has O(1)
   -> in some cases compiler can convert the code of tail recursion into object code of loop  

2) head recursion->print last and function at first 
   -> if you write the head recursion it is hard to implement in loop 

3) tree recursion-> at least two time function call at one time

4) indirect recursion -> Different function can use his functionallity at turn by turn like circular fashion

   